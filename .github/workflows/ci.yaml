name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'

env:
  MCP_SERVER_REQUEST_TIMEOUT: 99999999999
  MCP_REQUEST_MAX_TOTAL_TIMEOUT: 99999999999

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        test-type: [lint, core, interactive, integration, tools]
        include:
          - os: macos-latest
            test-type: core

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v6
    - run: make sync

    - name: Run lint
      if: matrix.test-type == 'lint'
      run: make check

    - name: Run core tests
      if: matrix.test-type == 'core'
      run: make test

    - name: Run interactive tests
      if: matrix.test-type == 'interactive'
      run: make test-interactive

    - name: Run integration tests
      if: matrix.test-type == 'integration'
      run: uv run pytest tests/integration/test_timing_workflows.py -v --tb=short

    - name: Run tools tests
      if: matrix.test-type == 'tools'
      run: uv run pytest tests/tools/ -v --tb=short

  nightly:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v6
    - run: make sync
    - run: uv run pytest tests/performance/test_memory_monitoring.py::TestStabilityMonitoring::test_stability_simulation -v -s --tb=short
    - run: uv run pytest tests/performance/test_benchmarks.py::TestStressTests -v -s --tb=short

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v6
    - run: make sync && uv add pytest-cov
    - run: uv run pytest --cov=src/openroad_mcp --cov-report=xml --cov-report=term-missing
    - uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
